name: build-and-create-release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
      - ".github/**"
      - ".gitignore"
      - "README.md"
      - "LICENSE"
      - "CHANGELOG.md"
      - "docs/**"
      - "gitversion.yml"
      - ".editorconfig"
      - ".vs/**"

jobs:
  prepare:
    name: Prepare version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.0
        with:
          versionSpec: '6.2.0'

      - name: Get version
        id: get_version
        uses: gittools/actions/gitversion/execute@v3.2.0

      - name: Set job output
        id: set_output
        run: echo "version=${{ steps.get_version.outputs.MajorMinorPatch }}" >> $GITHUB_OUTPUT

    outputs:
      version: ${{ steps.set_output.outputs.version }}

  build-linux:
    name: Build Linux Native AOT
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Set VERSION env
        run: echo "VERSION=${{ needs.prepare.outputs.version }}" >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Publish Linux x64 (Native AOT)
        run: dotnet publish AskLlm.csproj -c Release -r linux-x64 -p:StripSymbols=true -p:Version=${{ needs.prepare.outputs.version }}

      - name: Upload Linux build artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-x64-build-v${{ env.VERSION }}
          path: '**/bin/Release/net*/linux-x64/publish/askllm'
          if-no-files-found: error

  build-windows:
    name: Build Windows Native AOT
    runs-on: windows-latest
    needs: prepare
    steps:
      - name: Set VERSION env
        run: echo "VERSION=${{ needs.prepare.outputs.version }}" >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Publish Win x64 (Native AOT)
        run: dotnet publish AskLlm.csproj -c Release -r win-x64 -p:StripSymbols=true -p:Version=${{ needs.prepare.outputs.version }}

      - name: Upload Win build artifact
        uses: actions/upload-artifact@v4
        with:
          name: win-x64-build-v${{ env.VERSION }}
          path: '**/bin/Release/net*/win-x64/publish/askllm.exe'
          if-no-files-found: error

  release:
    name: Create GitHub Release & update scoop
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    permissions:
      contents: write
    steps:
      - name: Set VERSION env
        run: echo "VERSION=${{ needs.prepare.outputs.version }}" >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-x64-build-v${{ env.VERSION }}

      - name: Download Win artifact
        uses: actions/download-artifact@v4
        with:
          name: win-x64-build-v${{ env.VERSION }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          generate_release_notes: true
          draft: false
          prerelease: false
          make_latest: true
          files: |
            **/bin/Release/net*/win-x64/publish/askllm.exe
            **/bin/Release/net*/linux-x64/publish/askllm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: scoop-file-update
        name: scoop file version update
        shell: pwsh
        run: |
          ./updatescoop.ps1 -Version ${{ env.VERSION }}

      - uses: stefanzweifel/git-auto-commit-action@v5
        name: Commit new scoop file
        with:
          commit_message: Update scoop file to version ${{ env.VERSION }}
          file_pattern: ask-llm.json
