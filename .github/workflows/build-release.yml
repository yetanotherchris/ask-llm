name: build-and-create-release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
      - ".github/**"
      - ".gitignore"
      - "README.md"
      - "LICENSE"
      - "CHANGELOG.md"
      - "docs/**"
      - "gitversion.yml"
      - ".editorconfig"
      - ".vs/**"

jobs:
  build:
    name: Build Native AOT (matrix)
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rid: linux-x64
            artifact_name: linux-x64-build
            file_name: askllm
          - os: windows-latest
            rid: win-x64
            artifact_name: win-x64-build
            file_name: askllm.exe

    runs-on: ${{ matrix.os }}
    outputs:
      VERSION: ${{ steps.set_output.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.0
        with:
          versionSpec: '6.2.0'

      - name: Get version
        id: get_version
        uses: gittools/actions/gitversion/execute@v3.2.0

      - name: Set job output
        id: set_output
        run: |
          version=${{ steps.get_version.outputs.MajorMinorPatch }}
          echo "VERSION=$version" >> $GITHUB_OUTPUT

      - name: Set VERSION env
        run: echo "VERSION=${{ steps.get_version.outputs.MajorMinorPatch }}" >> $GITHUB_ENV

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Publish Native AOT
        run: dotnet publish AskLlm.csproj -c Release -r ${{ matrix.rid }} -p:PublishAot=true -p:StripSymbols=true -p:Version=${{ env.VERSION }} -p:AssemblyVersion=${{ env.VERSION }}.0

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: bin/Release/net9.0/${{ matrix.rid }}/publish/${{ matrix.file_name }}
          if-no-files-found: error

  release:
    name: Create GitHub Release & update scoop
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Set VERSION env
        run: echo "VERSION=${{ needs.build.outputs.VERSION }}" >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-x64-build

      - name: Download Win artifact
        uses: actions/download-artifact@v4
        with:
          name: win-x64-build

      - name: Rename artifacts
        run: |
          mv askllm askllm-v${{ env.VERSION }}-linux-x64
          mv askllm.exe askllm-v${{ env.VERSION }}-win-x64.exe

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          generate_release_notes: true
          draft: false
          prerelease: false
          make_latest: true
          files: |
            askllm-v${{ env.VERSION }}-win-x64.exe
            askllm-v${{ env.VERSION }}-linux-x64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Switch to main branch
        run: git checkout main

      - id: scoop-file-update
        name: scoop file version update
        shell: pwsh
        run: |
          ./updatescoop.ps1 -Version ${{ env.VERSION }}

      - uses: stefanzweifel/git-auto-commit-action@v5
        name: Commit new scoop file
        with:
          commit_message: Update scoop file to version ${{ env.VERSION }}
          file_pattern: ask-llm.json
